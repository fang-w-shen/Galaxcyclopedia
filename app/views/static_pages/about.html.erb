<% provide(:title, "Documentation") %>
<div id="container" style="color:<%= logged_in? ? 'black' : 'white' %>;">
	<% if !logged_in? %>
	<div class="homebackground" style="background-image:URL(<%= asset_path('background.png') %>)"></div>
	<% end %>

<!-- 	<div>
		<div class='col-md-4 text-center'></div>
		<div class='col-md-4 text-center'><img src="https://www.facebook.com/rsrc.php/v3/yP/r/5u9lQXdstx5.png" alt="Mission"><div class="_3-8w">API EndPoints</div></div>
		<div class='col-md-4 text-center'></div>
	</div> -->
	<div  style="width:100vw;position:absolute;left:0px">

		<div class="col-md-6">
			<%= render 'static_pages/overview' %>

			<hr>
			<div class="scrollmenu col-md-12">
			  <a data-target="#myCarousel" data-slide-to="0" class="highlightedbar" style="<%= logged_in? ? 'color:grey;
    border-bottom:2px solid grey;' : 'color: white;
    border-bottom:2px solid white;' %>">VERSIONS</a>
			  <a data-target="#myCarousel" data-slide-to="1" style="<%= logged_in? ? 'color:grey;
    border-bottom:2px solid grey;' : 'color: white;
    border-bottom:2px solid white;' %> ">ACCESS</a>
			  <a data-target="#myCarousel" data-slide-to="2" style="<%= logged_in? ? 'color:grey;
    border-bottom:2px solid grey;' : 'color: white;
    border-bottom:2px solid white;' %> ">RESPONSES</a>
			  <a data-target="#myCarousel" data-slide-to="3" style="<%= logged_in? ? 'color:grey;
    border-bottom:2px solid grey;' : 'color: white;
    border-bottom:2px solid white;' %> ">REQUESTS</a>
			</div>
			<hr>
			<div id="myCarousel" class="carousel slide col-md-12" data-ride="" style="height:41.8vh;background: #181b18db;padding-top:1em;padding-right:.5em;">
			  <!-- Indicators -->
			  <ol class="carousel-indicators" style="top:10px;z-index:0;">
			    <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
			    <li data-target="#myCarousel" data-slide-to="1"></li>
			    <li data-target="#myCarousel" data-slide-to="2"></li>
			    <li data-target="#myCarousel" data-slide-to="3"></li>

			  </ol>

			  <!-- Wrapper for slides -->
			  <div class="carousel-inner" style="color:white;">
			    <div class="item active">
					<%= render 'static_pages/versioning' %>

			    </div>

			    <div class="item">
					<%= render 'static_pages/access' %>

			    </div>

			    <div class="item">
			    	<%= render 'static_pages/responses' %>
			    </div>
			    <div class="item">
			    	<%= render 'static_pages/requests' %>
			    </div>
			  </div>

			  <!-- Left and right controls -->
<!-- 			  <a class="left carousel-control" href="#myCarousel" data-slide="prev">
			    <span class="glyphicon glyphicon-chevron-left"></span>
			    <span class="sr-only">Previous</span>
			  </a>
			  <a class="right carousel-control" href="#myCarousel" data-slide="next">
			    <span class="glyphicon glyphicon-chevron-right"></span>
			    <span class="sr-only">Next</span>
			  </a> -->
			</div>


		</div>
		<div class="col-md-6" >
		<label for="basic-url">Try For Yourself!</label>
		<div class="input-group">
		  <span class="input-group-addon" style="background: white;"><span class="glyphicon glyphicon-globe" aria-hidden="true" style="color:black;border-right:none;"></span></span>
		  <span class="input-group-addon" id="basic-addon3" style="border-left:none;border-right:none;background:white;color:black">https://galaxcyclopedia.herokuapp.com/</span>
		  <input type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3" placeholder="solarsystem/?api_key={api_key}" autofocus style="border-left:none;margin-left: -11px;padding-left: 0;width: -webkit-fill-available;">
		  <span class="input-group-addon" id='GET' onclick="makeajaxcall()">GET</span>
		</div>
			<pre id="exampleresponse" style="height:77vh;overflow-x:hidden;">

			</pre>
		</div>



	</div>
<script type="text/javascript">
			function changeCurl() {
			var text = 'curl -X GET "https://galaxcyclopedia.herokuapp.com/solarsystem/?api_key={api_key}" \n  -H "accept: version.2.0.json" '
			$('#codesection').html(text)
		}
		function changeXHR() {
			var text = `var data = null;
var xhr = new XMLHttpRequest();
xhr.withCredentials = true;

xhr.addEventListener("readystatechange", function () {
  if (this.readyState === 4) {
    console.log(this.responseText);
  }
});

xhr.open("GET", `+ '"https://galaxcyclopedia.herokuapp.com/solarsystem/?api_key={api_key}");' +
`\nxhr.setRequestHeader("accept", "version.2.0.json");

xhr.send(data);`
			$('#codesection').html(text)
		}
		function changeAJAX() {
			var text = `var settings = {
  "async": true,
  "crossDomain": true,
  "url": ` + '"https://galaxcyclopedia.herokuapp.com/solarsystem/?api_key={api_key}",' +
  `\n  "method": "GET",
  "headers": {
    "accept": "version.2.0.json"
  }
}

$.ajax(settings).done(function (response) {
  console.log(response);
});`
			$('#codesection').html(text)
		}

		function changeRuby() {
			var text = `require 'uri'
require 'net/http'

url = ` + 'URI("https://galaxcyclopedia.herokuapp.com/solarsystem/?api_key={api_key}")'+

`\nhttp = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)
request["accept"] = 'version.2.0.json'

response = http.request(request)
puts response.read_body`
			$('#codesection').html(text)
		}
		function changePython() {
			var text = `import http.client

conn = http.client.HTTPSConnection("galaxcyclopedia.herokuapp.com")

headers = {
    'accept': "version.2.0.json"
    }

conn.request("GET", "/solarsystem/?api_key={api_key}", headers=headers)

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))`
			$('#codesection').html(text)
		}
		function changeC() {
			var text = 'var url = "https://galaxcyclopedia.herokuapp.com/solarsystem/?api_key={api_key}"'+
`\nvar client = new RestClient(url);
var request = new RestRequest(Method.GET);
request.AddHeader("accept", "version.2.0.json");
IRestResponse response = client.Execute(request);`
			$('#codesection').html(text)
		}

		function changeNode() {
			var text = `var request = require("request");

var options = { method: 'GET',
  url: 'https://galaxcyclopedia.herokuapp.com/solarsystem/',
  qs: { api_key: '{api_key}' },
  headers:
   { accept: 'version.2.0.json' } };

request(options, function (error, response, body) {
  if (error) throw new Error(error);

  console.log(body);
});`
			$('#codesection').html(text)
		}
		function changeJava() {
			var text = `OkHttpClient client = new OkHttpClient();

Request request = new Request.Builder()
  .url("https://galaxcyclopedia.herokuapp.com/solarsystem/?api_key={api_key}")
  .get()
  .addHeader("accept", "version.2.0.json")
  .build();

Response response = client.newCall(request).execute();`
			$('#codesection').html(text)
		}
		function changeHTTP() {
			var text = `GET /solarsystem/?api_key={api_key} HTTP/1.1
Host: galaxcyclopedia.herokuapp.com
accept: version.2.0.json`
			$('#codesection').html(text)
		}
		var jsonPrettyPrint = {
		   replacer: function(match, pIndent, pKey, pVal, pEnd) {
		      var key = '<span class=json-key>';
		      var val = '<span class=json-value>';
		      var str = '<span class=json-string>';
		      var r = pIndent || '';
		      if (pKey)
		         r = r + key + pKey.replace(/[": ]/g, '') + '</span>: ';
		      if (pVal)
		         r = r + (pVal[0] == '"' ? str : val) + pVal + '</span>';
		      return r + (pEnd || '');
		      },
		   toHtml: function(obj) {
		      var jsonLine = /^( *)("[\w]+": )?("[^"]*"|[\w.+-]*)?([,[{])?$/mg;
		      return JSON.stringify(obj, null, 2)
		         .replace(/&/g, '&amp;').replace(/\\"/g, '&quot;')
		         .replace(/</g, '&lt;').replace(/>/g, '&gt;')
		         .replace(jsonLine, jsonPrettyPrint.replacer);
		      }
		   };
		function makeajaxcall() {

			var search = $('#basic-url').val();
			var settings = {
			  "async": true,
			  "crossDomain": true,
			  "url": "https://galaxcyclopedia.herokuapp.com/"+`${search}`,
			  "method": "GET",
			  "headers": {
			    "accept": "version.2.0.json"
			  }
			}

			$.ajax(settings).done(function (response) {

			  $('#exampleresponse').html(jsonPrettyPrint.toHtml(response));

			}).fail(()=>{
			  $('#exampleresponse').html(jsonPrettyPrint.toHtml({"Message": 'Invalid Request. Try Again.'}))
			});

		}
		$(window).on('keydown',(e)=>{
			if (e.keyCode == 13) {
				makeajaxcall();
			}
		})





		$(window).on("click",()=>{
			$('ol>li').each((index,item)=>{
				if (item && item.classList.value == 'active') {
					$('.scrollmenu > a.highlightedbar').removeClass('highlightedbar');
					$('.scrollmenu > a')[index].classList.add('highlightedbar');
				}

			})
			if (window.location.pathname != '/about') {
				$('ol>li').each((index,item)=>{
					if (item && item.classList.value == 'active') {
						$('.scrollmenu > a.highlightedbar').removeClass('highlightedbar');
					}
				})
			}

		})


</script>
